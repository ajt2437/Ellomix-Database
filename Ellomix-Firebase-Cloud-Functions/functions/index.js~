// The Cloud Functions for Firebase SDK to create Cloud Functions and setup triggers.
const functions = require('firebase-functions');

// The Firebase Admin SDK to access the Firebase Realtime Database
const admin = require('firebase-admin');
admin.initializeApp();

// // Create and Deploy Your First Cloud Functions
// // https://firebase.google.com/docs/functions/write-firebase-functions
//
// exports.helloWorld = functions.https.onRequest((request, response) => {
//  response.send("Hello from Firebase!");
// });

// Listens for new groups added to /Messages/
exports.newGroup = functions.database.ref('/Messages/{groupId}')
    .onCreate((snapshot, context) => {
	    //The topic name can be optionally prefixed with "/topics/"
	    var topic = snapshot.key;

	    //Print out group key
	    console.log('Group key', topic);

	    //Prepare message
	    var message = {
		notification: {
		    title: 'You just got invited to a new chat',
		    body: 'Start chatting up'
		},
		topic: topic
	    };

	    //Send a message to devices subscribed to the provided topic
	    admin.messaging().send(message)
	    .then((response) => {
		    //Response is a message
		    console.log('Successfully sent message:', response);
		});
    });
	

// Listens for new messages added to /messages/:pushId/original and creates an
// uppercase version of the message to /messages/:pushId/uppercase
//exports.makeUppercase = functions.database.ref('/tests/{pushId}/original')
//    .onCreate((snapshot, context) => {
	    // Grab the current value of what was written to the Realtime Database.
//	    const original = snapshot.val();
//	    console.log('Uppercasing', context.params.pushId, original);
//	    const uppercase = original.toUpperCase();
	    // You must return a Promise when performing asynchronous tasks inside a Functions such as
	    // writing to the Firebase Realtime Database.
	    // Setting an "uppercase" sibling in the Realtime Database returns a Promise.
//	    return snapshot.ref.parent.child('uppercase').set(uppercase);
//	});