# Generated by Django 2.0.2 on 2018-02-12 03:09

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('chat_id', models.AutoField(primary_key=True, serialize=False)),
                ('most_recent_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ChatUsers',
            fields=[
                ('chat_user_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'chat_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                'db_table': 'comment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('message_id', models.AutoField(primary_key=True, serialize=False)),
                ('message', models.TextField(blank=True, null=True)),
                ('photo_url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'message',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('playlist_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'playlist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('follower_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'relationship',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimelinePost',
            fields=[
                ('post_id', models.AutoField(primary_key=True, serialize=False)),
                ('date_posted', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'timelinepost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('track_id', models.AutoField(primary_key=True, serialize=False)),
                ('artist', models.CharField(blank=True, max_length=75, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('stream_url', models.TextField(blank=True, null=True)),
                ('artwork_url', models.TextField(blank=True, null=True)),
                ('source', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'track',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Users',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=75)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('followers_count', models.IntegerField(blank=True, null=True)),
                ('following_count', models.IntegerField(blank=True, null=True)),
                ('photo_url', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
